{"map":"{\"version\":3,\"sources\":[\"/Users/Ashwathreddy/Documents/github/GroceryListApp/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/Ashwathreddy/Documents/github/GroceryListApp/src/logo.svg\",\"/Users/Ashwathreddy/Documents/github/GroceryListApp/src/components/ListItems.js\",\"/Users/Ashwathreddy/Documents/github/GroceryListApp/src/components/GroceryInput.js\",\"/Users/Ashwathreddy/Documents/github/GroceryListApp/src/components/button.js\",\"/Users/Ashwathreddy/Documents/github/GroceryListApp/src/App.js\",\"/Users/Ashwathreddy/Documents/github/GroceryListApp/src/serviceWorker.js\",\"/Users/Ashwathreddy/Documents/github/GroceryListApp/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"ListItems\",\"props\",\"Items\",\"items\",\"map\",\"added_element\",\"react_default\",\"a\",\"createElement\",\"key\",\"GroceryInput\",\"onSubmit\",\"addItem\",\"type\",\"name\",\"placeholder\",\"onChange\",\"handleInput\",\"AddItemButton\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"e\",\"itemText\",\"target\",\"value\",\"console\",\"log\",\"setState\",\"currentItem\",\"preventDefault\",\"newItem\",\"state\",\"concat\",\"toConsumableArray\",\"className\",\"components_GroceryInput\",\"components_ListItems\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gMCYzBC,IAAAA,EAVf,SAAmBC,GACjB,IAAMC,EAAQD,EAAME,MAAMC,IAAI,SAACC,GAAD,OAC9BC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,IAAKJ,GAAgBA,KAEzB,OAAQC,EAAAC,EAAAC,cAAA,KAAA,KAAKN,ICMAQ,IAAAA,EAVf,SAAsBT,GAClB,OACEK,EAAAC,EAAAC,cAAA,OAAA,CAAMG,SAAUV,EAAMW,SACtBN,EAAAC,EAAAC,cAAA,QAAA,CAAQK,KAAK,OAAOC,KAAK,OAAOC,YAAc,qBAAqBC,SAAUf,EAAMgB,cACnFX,EAAAC,EAAAC,cAAA,SAAA,KAAA,cCISU,ICsCAC,cAvCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAMFN,YAAc,SAAAU,GACZ,IAAMC,EAAWD,EAAEE,OAAOC,MAC1BC,QAAQC,IAAIJ,GACZR,EAAKa,SAAS,CACZC,YAAYN,KAXHR,EAcbR,QAAU,SAAAe,GACRA,EAAEQ,iBACF,IAAMC,EAAUhB,EAAKiB,MAAMH,YACrB/B,EAAK,GAAAmC,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAOD,EAAKiB,MAAMlC,OAAlB,CAAwBiC,IAEnChB,EAAKa,SAAS,CACZ9B,MAAMA,KAlBRiB,EAAKiB,MAAQ,CACXlC,MAAQ,GACR+B,YAAc,IAJLd,wEAyBX,OACEd,EAAAC,EAAAC,cAAA,MAAA,CAAKgC,UAAU,OACblC,EAAAC,EAAAC,cAAA,SAAA,CAAQgC,UAAU,cAChBlC,EAAAC,EAAAC,cAAA,IAAA,KAAA,iBAGJF,EAAAC,EAAAC,cAACiC,EAAD,CAAc7B,QAASW,KAAKX,QAASK,YAAeM,KAAKN,cACzDX,EAAAC,EAAAC,cAACkC,EAAD,CAAWvC,MAAOoB,KAAKc,MAAMlC,gBAjCjBwC,EAAAA,WCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\n\\nfunction ListItems(props){\\n  const Items = props.items.map((added_element) =>\\n  <li key={added_element}>{added_element}</li>\\n);\\n  return (<ul>{Items}</ul>);\\n}\\n\\n\\n\\n\\nexport default ListItems;\\n\",\"import React, { Component } from 'react';\\n\\nfunction GroceryInput(props){\\n    return (\\n      <form onSubmit={props.addItem}>\\n      <input  type=\\\"text\\\" name=\\\"item\\\" placeholder = 'Enter Name of Item' onChange={props.handleInput} />\\n      <button>Add Item</button>\\n      </form>\\n    );\\n}\\n\\n\\nexport default GroceryInput;\\n\",\"import React, { Component } from 'react';\\nimport GroceryList from './ListItems.js';\\nimport GroceryInput from './GroceryInput.js';\\nfunction AddItemButton(props){\\n\\n\\n    return (<button>+</button>);\\n}\\n\\n\\nexport default AddItemButton;\\n\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport ListItems from './components/ListItems.js';\\nimport AddItemButton from './components/button.js';\\nimport GroceryInput from './components/GroceryInput.js'\\n\\n\\nclass App extends Component {\\n  constructor(){\\n    super()\\n    this.state = {\\n      items : [],\\n      currentItem : ''\\n    }\\n  }\\n  handleInput = e => {\\n    const itemText = e.target.value\\n    console.log(itemText)\\n    this.setState({\\n      currentItem:itemText,\\n    })\\n  }\\n  addItem = e => {\\n    e.preventDefault()\\n    const newItem = this.state.currentItem\\n    const items = [...this.state.items,newItem];\\n\\n    this.setState({\\n      items:items\\n    });\\n\\n  }\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <p>Grocery List</p>\\n        </header>\\n\\n      <GroceryInput addItem={this.addItem} handleInput = {this.handleInput} />\\n      <ListItems items={this.state.items} />\\n\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,n){},17:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},18:function(e,t,n){},20:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),i=(n(15),n(6)),l=n(3),m=n(4),u=n(7),s=n(5),d=n(8);n(17),n(18);var p=function(e){var t=e.items.map(function(e){return r.a.createElement(\"li\",{key:e},e)});return r.a.createElement(\"ul\",null,t)};var h=function(e){return r.a.createElement(\"form\",{onSubmit:e.addItem},r.a.createElement(\"input\",{type:\"text\",name:\"item\",placeholder:\"Enter Name of Item\",onChange:e.handleInput}),r.a.createElement(\"button\",null,\"Add Item\"))};var f=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(u.a)(this,Object(s.a)(t).call(this))).handleInput=function(t){var n=t.target.value;console.log(n),e.setState({currentItem:n})},e.addItem=function(t){t.preventDefault();var n=e.state.currentItem,a=[].concat(Object(i.a)(e.state.items),[n]);e.setState({items:a})},e.state={items:[],currentItem:\"\"},e}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"p\",null,\"Grocery List\")),r.a.createElement(h,{addItem:this.addItem,handleInput:this.handleInput}),r.a.createElement(p,{items:this.state.items}))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,n){e.exports=n(20)}},[[9,2,1]]]);","extractedComments":[]}